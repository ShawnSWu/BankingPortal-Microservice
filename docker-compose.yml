version: "3"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - local

  kafka1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka1
    hostname: kafka1
    ports:
      - '29092:29092'
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_KRAFT_CLUSTER_ID=transaction-cluster
      - KAFKA_KRAFT_NUM_REPLICAS=1
      - KAFKA_KRAFT_NUM_PARTITIONS=1
    depends_on:
      - zookeeper
    networks:
      - local
    volumes:
      - ./kafka1/data:/confluentinc/kafka/data
      - ./kafka1/logs:/confluentinc/kafka/logs


  ksqldb-server:
    image: confluentinc/ksqldb-server:0.18.0
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - kafka1
    ports:
      - "8088:8088"
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: kafka1:9092
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_KSQL_CONNECT_WORKER_CONFIG: "/connect/connect.properties"
    volumes:
      - ./confluentinc-kafka-connect-jdbc-10.7.3:/usr/share/kafka/plugins/jdbc
      - ./connect.properties:/connect/connect.properties
    networks:
      - local


networks:
  local:
    driver: bridge
#
#  api:
#    build: ./ApiGatewayService
#    container_name: ApiGatewayService
#    ports:
#      - 8080:8080
#    depends_on:
#      - kafka
#    networks:
#      - local
#
#  auth:
#    build: ./AuthService
#    container_name: AuthService
#    ports:
#      - 9000:9000
#    depends_on:
#      - kafka
#    networks:
#      - local
#
#  transaction:
#    build: ./TransactionManagementService
#    container_name: TransactionManagementService
#    ports:
#      - 8082:8082
#    depends_on:
#      - kafka
#    networks:
#      - local


